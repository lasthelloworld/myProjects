Flex：弹性布局


一.容器
定义容器为弹性布局
.box{
  display: flex;//弹性布局
}
.box{
  display: inline-flex;//行弹性布局
}

Webkit 内核的浏览器 谷歌系需加-webkit前缀
WebKit: Safari, Google Chrome
Trident: IE 以Trident 作为内核引擎;
Gecko: Firefox 是基于 Gecko 开发;

.box{
  display: -webkit-flex; /* Safari */
  display: flex;
}


设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效。

一个元素使用flex布局，元素本身变为“容器”，子元素变为“容器项目”。


容器两根轴：
水平主轴：最左边main start 到最右边 main end 
垂直交叉轴：做上面cross start 到结束位置 cross end

单个项目占主轴空间：main size
单个项目占交叉轴空间: cross size

（1） flex-direction属性:控制项目排列方向
 .box {
  flex-direction: row | row-reverse | column | column-reverse;// 左为起点向右排 |右为起点向左排 |上为起点向下排 |下为起点向上排
}
（2）flex-wrap属性：控制项目换行方式
.box{
  flex-wrap: nowrap | wrap | wrap-reverse; //不换行 | 向下换行第一行在上方 | 向下换行第一行在下方 
}
(3) flex-flow属性:控制项目显示顺序
.box {
  flex-flow: <flex-direction> || <flex-wrap>; 
}
<flex-direction> row | nowrap //  正向排序|反向排序
<flex-wrap>  同（2）flex-wrap

（4）justify-content属性：定义了项目在主轴上的对齐方式。
.box {
  justify-content: flex-start | flex-end | center | space-between | space-around; // 左对齐 | 右对齐 | 居中对齐 | 两端对齐，项目间隔相等 | 项目与边框间隔1，项目间间隔2方式对齐。
}
（5）align-items属性：定义项目在交叉轴上如何对齐
.box {
  align-items: flex-start | flex-end | center | baseline | stretch;// 交叉轴起点对齐|终点对齐|中点对齐|项目第一行文字对齐|默认占满整个高度
}
(6) align-content属性:定义多根轴线对齐方式（类似于多行项目情况）
.box {
  align-content: flex-start | flex-end | center | space-between | space-around | stretch;
}//交叉轴的起点对齐|交叉轴的终点对齐|交叉轴的中点对齐|交叉轴两端对齐，轴线之间(每行项目)的间隔平均分布|轴线之间的间隔比轴线与边框的间隔大一倍。|线（每行项目）占满整个交叉轴


二.项目属性：
(1) order属性:定义项目的排列顺序
 .item {
     order:<number> //控制项目排列属性，默认0，数值越小越靠前
 }

(2)flex-grow属性:属性定义项目放大比例,默认为0,即如果存在剩余空间，也不放大。
.item {
  flex-grow: <number>; /* default 0 */
} //可能等分，可能按比例例如：3个都为1，则1:1:1,若两个1一个2，则1:2:1

(3)flex-shrink属性:属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小,负值无效，值越大约小。
.item {
  flex-shrink: <number>; /* default 1 */
}

(4)flex-basis属性:
flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。
.item {
  flex-basis: <length> | auto; /* default auto */ 
}
<length>:可设置width和height,则项目占固定空间

（5）flex属性
属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。
.item {
  flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]
}
该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。
建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。

(6) align-self属性
单独设置项目对齐属性，覆盖父级容器align-items属性，默认为auto,表示继承align-items属性，若没有父级则auto表示stretch。
.item {
  align-self: auto | flex-start | flex-end | center | baseline | stretch;
}//其他属性和align-items一致



